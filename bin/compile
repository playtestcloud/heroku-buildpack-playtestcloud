#!/usr/bin/env bash
set -o errexit

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

# topic "Preparing APT"
# APT_CACHE_DIR="$CACHE_DIR/apt/cache"
# APT_STATE_DIR="$CACHE_DIR/apt/state"
# SOURCES_LIST_PATH="$CACHE_DIR/apt/sources.list"
# APT_KEYRING_PATH="$CACHE_DIR/apt/trusted.gpg"

# mkdir -p "$APT_CACHE_DIR/archives/partial"
# mkdir -p "$APT_STATE_DIR/lists/partial"
# cp /etc/apt/sources.list $SOURCES_LIST_PATH
# cp /etc/apt/trusted.gpg $APT_KEYRING_PATH

# APT_OPTIONS="-y -o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR -o Dir::Etc::SourceList=$SOURCES_LIST_PATH -o Dir::Etc::Trusted=$APT_KEYRING_PATH"
# apt-key --keyring $APT_KEYRING_PATH adv --keyserver keyserver.ubuntu.com --recv-keys 90BD7EACED8E640A | indent

# #apt-get $APT_OPTIONS update
# #ls -R $CACHE_DIR/apt

# echo "Writing profile script" | indent
# mkdir -p $BUILD_DIR/.profile.d
# cat <<EOF >$BUILD_DIR/.profile.d/000_apt.sh
# export PATH="\$HOME/.apt/usr/bin:\$PATH"
# export LD_LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$LD_LIBRARY_PATH"
# export LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$LIBRARY_PATH"
# export INCLUDE_PATH="\$HOME/.apt/usr/include:\$INCLUDE_PATH"
# export CPATH="\$INCLUDE_PATH"
# export CPPPATH="\$INCLUDE_PATH"
# export PKG_CONFIG_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/i386-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/pkgconfig:\$PKG_CONFIG_PATH"
# EOF

# export PATH="$BUILD_DIR/.apt/usr/bin:$PATH"
# export LD_LIBRARY_PATH="$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu:$BUILD_DIR/.apt/usr/lib/i386-linux-gnu:$BUILD_DIR/.apt/usr/lib:$LD_LIBRARY_PATH"
# export LIBRARY_PATH="$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu:$BUILD_DIR/.apt/usr/lib/i386-linux-gnu:$BUILD_DIR/.apt/usr/lib:$LIBRARY_PATH"
# export INCLUDE_PATH="$BUILD_DIR/.apt/usr/include:$INCLUDE_PATH"
# export CPATH="$INCLUDE_PATH"
# export CPPPATH="$INCLUDE_PATH"
# export PKG_CONFIG_PATH="$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu/pkgconfig:$BUILD_DIR/.apt/usr/lib/i386-linux-gnu/pkgconfig:$BUILD_DIR/.apt/usr/lib/pkgconfig:$PKG_CONFIG_PATH"
# #export PYTHONPATH="$BUILD_DIR/.apt/usr/lib/python3/dist-packages:$PYTHONPATH"

# #give environment to later buildpacks
# export | grep -E -e ' (PATH|LD_LIBRARY_PATH|LIBRARY_PATH|INCLUDE_PATH|CPATH|CPPPATH|PKG_CONFIG_PATH)='  > "$LP_DIR/export"


# topic "Install ffmpeg"
# printf "\ndeb http://ppa.launchpad.net/mc3man/trusty-media/ubuntu trusty main" >> $SOURCES_LIST_PATH
# apt-get $APT_OPTIONS update | indent
# apt-get $APT_OPTIONS -d install --reinstall ffmpeg | indent
# for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
#   echo "Installing $(basename $DEB)" | indent
#   dpkg -x $DEB $BUILD_DIR/.apt/ | indent
# done

# echo "Amending profile script for ffmpeg" | indent
# cat <<EOF >$BUILD_DIR/.profile.d/001_apt.sh
# export PATH="\$HOME/.apt/opt/ffmpeg/bin:\$PATH"
# EOF


topic "Install wav2png"
# apt-get $APT_OPTIONS -d install --reinstall libsndfile1 libsndfile1-dev libpng++-dev libpng12-0 libboost-program-options-dev git | indent
# for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
#   echo "Installing $(basename $DEB)" | indent
#   dpkg -x $DEB $BUILD_DIR/.apt/ | indent
# done

cd $BUILD_DIR
git clone https://github.com/playtestcloud/wav2png | indent
cd wav2png/build
make all | indent
echo "Amending profile script for wav2png" | indent
cat <<EOF >$BUILD_DIR/.profile.d/002_apt.sh
export PATH="\$HOME/wav2png/bin/Linux:\$PATH"
EOF